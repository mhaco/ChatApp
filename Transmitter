/* In THE NAME of  ALLAH/* -----------------------------------------------------------------------------
 - Request
   - FR24 library
 - Connections
   - nRF24L01 to Arduino
     1 GND      GND
     2 VCC   3V3
     3 CE  D9
     4 CSN   D10
     5 SCK   D13
     6 MOSI  D11
     7 MISO  D12
     8 UNUSED 
* ---------------------------------------------------------------------------*/
/* Includes ------------------------------------------------------------------*/
#include <SPI.h>
//#include <nRF24L01.h>
#include <Ethernet.h>
#include <RF24.h>
/* Ports ---------------------------------------------------------------------*/
#define CE_PIN   7
#define CSN_PIN 8
/* Ethernet config -----------------------------------------------------------*/

byte mac[] = { 0xDE, 0xAD, 0xBE, 0xEF, 0xFE, 0xED }; //physical mac address
byte ip[] = { 169, 254, 99, 177 }; // ip in lan
byte gateway[] = { 169, 254, 99, 1 }; // internet access via router
byte subnet[] = { 255, 255, 255, 0 }; //subnet mask
EthernetServer server(8081); //server port
String readString;
/* nRF24l01 ------------------------------------------------------------------*/
// NOTE: the "LL" at the end of the constant is "LongLong" type
const uint64_t pipe = 0xE8E8F0F0E1LL; // Define the transmit pipe
RF24 radio(CE_PIN, CSN_PIN); // Create a Radio
/* Joystick ------------------------------------------------------------------*/
int value[2]; // 1 element array holding value readings
/* ---------------------------------------------------------------------------*/

/*
 - setup function
 * ---------------------------------------------------------------------------*/
void setup()
{
  Serial.begin(9600);
  delay(1000);
  
  radio.begin();
  radio.setRetries(15, 15);//Set the number and delay of retries upon failed submit.
  radio.setPALevel(RF24_PA_HIGH);
  radio.openWritingPipe(pipe);
/* Ethernet setup */
  Ethernet.begin(mac, ip, gateway, subnet);
  server.begin();
  //enable serial data print
  Serial.println("server Started"); // so I can keep track of what is loaded
//*    */
  pinMode(3, OUTPUT);
  pinMode(2, OUTPUT);
  digitalWrite(2 , LOW);
  
}

/*
 - loop function
 * ---------------------------------------------------------------------------*/
void loop()
 {
  // Create a client connection
  EthernetClient client = server.available();
  if (client) {
    while (client.connected()) {   
      if (client.available()) {
        char c = client.read();
     
        //read char by char HTTP request
        if (readString.length() < 100) {
          //store characters to string
          readString += c;
          //Serial.print(c);
         }

         //if HTTP request has ended
         if (c == '\n') {          
           Serial.println(readString); //print to serial monitor for debuging
     
           client.println("HTTP/1.1 200 OK"); //send new page
           client.println("Content-Type: text/html");
           client.println();     
           client.println("<HTML>");
           client.println("<HEAD>");
           client.println("<meta name='apple-mobile-web-app-capable' content='yes' />");
           client.println("<meta name='apple-mobile-web-app-status-bar-style' content='black-translucent' />");
           client.println("<link rel='stylesheet' type='text/css' href='http://randomnerdtutorials.com/ethernetcss.css' />");
           client.println("<TITLE>ETHERNET CONTROLLER</TITLE>");
           client.println("</HEAD>");
           client.println("<BODY>");
           client.println("<H1>Ethernet controller</H1>");
           client.println("<hr />");
           client.println("<br />");  
           client.println("<H2> User Interface for controlling </H2>");
           client.println("<br />");  
           client.println("<a href=\"/?button1on\"\">Turn On LED</a>");
           client.println("<a href=\"/?button1off\"\">Turn Off LED</a><br />");   
           client.println("<br />");     
           client.println("<br />"); 
           client.println("<a href=\"/?button2on\"\">Rotate Left</a>");
           client.println("<a href=\"/?button2off\"\">Rotate Right</a><br />"); 
           client.println("<p>Created by Hadivash.</p>");  
           client.println("<br />"); 
           client.println("</BODY>");
           client.println("</HTML>");
     
           delay(1);
           //stopping client
           client.stop();
           //controls the Arduino if you press the buttons
          if (readString.indexOf("?button2on") >0){
              digitalWrite(3, HIGH);
              value[0] = 1;
              value[1] = 0;
              Serial.print("value[0] = ");Serial.println(value[0]);
              Serial.print("value[1] = ");Serial.println(value[1]);
              radio.write( value, sizeof(value) );
              delay(1);
           }
           if (readString.indexOf("?button2off") >0){
              value[0] = 2;
              value[1] = 0;
              Serial.print("value[0] = ");Serial.println(value[0]);
              Serial.print("value[1] = ");Serial.println(value[1]);
              radio.write( value, sizeof(value) );
              delay(1);
               digitalWrite(3, LOW);
           }
           if (readString.indexOf("?button1on") >0){
              value[0] = 3;
              value[1] = 0;
              Serial.print("value[0] = ");Serial.println(value[0]);
              Serial.print("value[1] = ");Serial.println(value[1]);
              radio.write( value, sizeof(value) );
              delay(1);              
              digitalWrite(3, HIGH);
           }
           if (readString.indexOf("?button1off") >0){
              value[0] = 4;
              value[1] = 0;
              Serial.print("value[0] = ");Serial.println(value[0]);
              Serial.print("value[1] = ");Serial.println(value[1]);
              radio.write( value, sizeof(value) );
              delay(1);
              digitalWrite(3, LOW);
           }
            //clearing string for next read
            readString="";  
           
         }
       }
    }
}
}
